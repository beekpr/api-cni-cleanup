# Daemonset
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: api-cni-cleanup
  labels:
    app: api-cni-cleanup
    version: v.0.0.1
spec:
  selector:
    matchLabels:
      beta.kubernetes.io/os: linux
      app: api-cni-cleanup
      version: v.0.0.1
  template:
    metadata:
      labels:
        beta.kubernetes.io/os: linux
        app: api-cni-cleanup
        version: v.0.0.1
    spec:
      containers:
      - name: api-cni-cleanup
        image: docker.io/jsenon/api-cni-cleanup:latest
        command: ["./api-cni-cleanup"]
        args: [server,--api,internal,--cnifiles,/var/lib/cni/networks/cbr0]
        imagePullPolicy: Always
        volumeMounts:
          - name: varcni
            mountPath: /var/lib/cni/networks
          - name: varrundocker
            mountPath: /var/run/docker.sock
        ports:
          - containerPort: 9010
            # hostPort: 39010
            protocol: http
      volumes:
      - name: varcni
        hostPath:
          path: /var/lib/cni/networks
      - name: varrundocker
        hostPath:
          path: /var/run/docker.socks
----
# SVC

----
# Cronjob
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: api-cni-cleanup
spec:
  schedule: "0 8 * * 1"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: api-cni-cleanup
            image: docker.io/jsenon/api-cni-cleanup:latest
            command: ["./api-cni-cleanup"]
            args: [job,--api, internal,--urlserver,http://localhost:9010/cleanup]
            env:
            - name: NODE_SERVER
              value: ""
          restartPolicy: OnFailure
